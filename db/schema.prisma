// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// The account of user of Station
// user's wallet address is primary key
model Account {
  id           Int                     @id @default(autoincrement())
  address      String                  @unique
  applications InitiativeApplication[]
  skills       SkillsOnAccounts[]
  tickets      AccountTerminal[]
  data         Json?
}

// Each DAO is represented by a terminal.
// roleNameOverrides overrides default role names
model Terminal {
  id            Int               @id @default(autoincrement())
  ticketAddress String            @unique
  handle        String            @unique
  initiatives   Initiative[]
  roles         Role[]
  tickets       AccountTerminal[]
  data          Json?
}

// A role within a terminal
model Role {
  terminal   Terminal          @relation(fields: [terminalId], references: [id])
  terminalId Int
  localId    Int               @default(autoincrement())
  tickets    AccountTerminal[]
  data       Json?

  @@id([terminalId, localId], name: "terminalRoleId")
}

model AccountTerminal {
  account     Account  @relation(fields: [accountId], references: [id])
  accountId   Int
  terminal    Terminal @relation(fields: [terminalId], references: [id])
  terminalId  Int
  role        Role     @relation(fields: [terminalId, roleLocalId], references: [terminalId, localId])
  roleLocalId Int
  joinedAt    DateTime @default(now())
  active      Boolean  @default(true)
  ticketUrl   String?

  @@id([accountId, terminalId])
}

// An initiative within a terminal
model Initiative {
  id             Int                     @id @default(autoincrement())
  terminal       Terminal                @relation(fields: [terminalId], references: [id])
  terminalId     Int
  terminalTicket String
  localId        Int                     @default(autoincrement())
  applications   InitiativeApplication[]
  data           Json?

  @@unique([terminalTicket, localId], name: "terminalInitiative")
}

// AKA "application"
model InitiativeApplication {
  id           Int        @id @default(autoincrement())
  applicant    Account    @relation(fields: [applicantId], references: [id])
  applicantId  Int
  initiative   Initiative @relation(fields: [initiativeId], references: [id])
  initiativeId Int
  createdAt    DateTime   @default(now())
  data         Json?
}

model Skill {
  id       Int                @id @default(autoincrement())
  name     String             @unique
  accounts SkillsOnAccounts[]
}

model SkillsOnAccounts {
  skill     Skill   @relation(fields: [skillId], references: [id])
  skillId   Int
  account   Account @relation(fields: [accountId], references: [id])
  accountId Int

  @@id([skillId, accountId])
}
