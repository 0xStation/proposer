import getRandomElement from "app/utils/getRandomElement"

// most of the SVG generators accept position props
// defines the x-y position in the grid for that icon.
interface PositionProps {
  x: number
  y: number
}

interface SVGProps {
  name: string
  terminal: string
  role: string
}

const GRADIENTS = ["orange-purple", "blue-green", "green-red"]

/**
 * Top level function, generates the SVG.
 *
 * @param props properties of the SVG, see type spec.
 * @returns full string representation of the SVG.
 */
export const genSVG = (props: SVGProps) => {
  if (props === undefined) {
    return "no props"
  }

  if (props.role === "VISITOR") {
    return stitchSVG(props, VISITOR_ARRANGEMENT)
  }

  if (props.role === "DAILY COMMUTER" || props.role === "WEEKEND COMMUTER") {
    return stitchSVG(props, CONTRIBUTOR_ARRANGEMENT)
  }

  if (props.role === "STAFF") {
    const ARRANGEMENTS = [CORE_ARRANGEMENT_ONE, CORE_ARRANGEMENT_TWO, CORE_ARRANGEMENT_THREE]
    return stitchSVG(props, getRandomElement(ARRANGEMENTS))
  }
}

/**
 * Calculates the square root of a number.
 *
 * @param props the number to calculate the root of.
 * @param arrangement arrangement of the icons for a particular SVG.
 * @returns full string representation of the SVG.
 */
const stitchSVG = (
  props: SVGProps,
  arrangement: (((props: PositionProps) => string) | null)[][]
) => {
  return `
  ${genSVGDefs()}
  ${genBase({ role: props.role })}
  ${genLogo()}
  ${genIconWithText({ x: 0, y: 100, iconLetter: "N", text: props.name })}
  ${genIconWithText({ x: 0, y: 127.5, iconLetter: "T", text: props.terminal })}
  ${genIconWithText({ x: 0, y: 155, iconLetter: "R", text: props.role })}
  <g transform="translate(0, 180)">
  ${genGridLines()}
  ${parseArrangement(arrangement)}
  ${genFooter({ stationName: props.terminal })}
  </g>
  </svg>
  `
}

/**
 * Houses the shared defs and base SVG wrapper.
 * P.S. Yes, I know that big text blog is ugly.
 *
 * @returns string SVG.
 */
const genSVGDefs = () => {
  return `
  <svg
    width="240"
    height="400"
    viewBox="0 0 240 400"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink">
    <defs>
    <style>
    @font-face {
      font-family: "Favorit";
      src: url(data:application/octet-stream;base64,);
    }
    }
      </style>
      <mask id="arrow">
        <rect x="5" y="5" height="30" width="30" rx="5" ry="5" fill="white" stroke-width="1.5px" />
        <line x1="10" y1="20" x2="30" y2="20" stroke="black" stroke-width="2px" />
        <polyline points="20, 10 30, 20 20, 30" stroke="black" stroke-width="2px" />
      </mask>
      <mask id="hole">
        <rect width="100%" height="100%" fill="white" />
        <circle r="50" cx="100" cy="100" fill="black" />
      </mask>
      <clipPath id="corners">
        <rect width="240" height="400" rx="24" ry="24" />
      </clipPath>
      <linearGradient id="g1" y2="100%" x2="80%">
        <stop offset="0" stop-color="#48D597" />
        <stop offset="1" stop-color="#8F3DFF" />
      </linearGradient>
      <radialGradient id="corner-shine">
        <stop offset="0" stop-color="white" />
        <stop offset="1" stop-color="white" stop-opacity="0%" />
      </radialGradient>
      <radialGradient
      id="corner-shine-2" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse"
      gradientTransform="translate(-5.57731e-06 -35.7544) rotate(70.6609) scale(350.312 268.023)">
        <stop stop-color="white" />
        <stop offset="1" stop-color="white" stop-opacity="0" />
      </radialGradient>
      <linearGradient id="shine" x1="-6.97408e-07" y1="273.631" x2="278.181" y2="225.312" gradientUnits="userSpaceOnUse">
        <stop offset="0.0572917" stop-color="#576265" />
        <stop offset="0.21875" stop-color="#9EA1A1" />
        <stop offset="0.453125" stop-color="#848B8A" />
        <stop offset="0.524381" stop-color="#576265" />
        <stop offset="0.796875" stop-color="#576265" />
        <stop offset="0.895833" stop-color="#757A7B" />
        <stop offset="1" stop-color="#576265" />
      </linearGradient>
      <linearGradient id="orange-purple" x1="13.5" y1="8.5" x2="240" y2="400" gradientUnits="userSpaceOnUse">
        <stop stop-color="#FF931E" />
        <stop offset="0.880208" stop-color="#7B61FF" />
      </linearGradient>
      <linearGradient id="blue-green" x1="13.5" y1="8.5" x2="240" y2="400" gradientUnits="userSpaceOnUse">
        <stop stop-color="#48D597" />
        <stop offset="0.9999" stop-color="#8F3DFF" />
      </linearGradient>
      <linearGradient id="green-red" x1="37.5" y1="8.5" x2="262" y2="413" gradientUnits="userSpaceOnUse">
        <stop stop-color="#48D597" />
        <stop offset="0.9999" stop-color="#E64467" />
      </linearGradient>
      <pattern id="stripes" patternUnits="userSpaceOnUse" width="16" height="16" patternTransform="rotate(145)">
        <line x1="0" y="0" x2="0" y2="25" stroke="black" stroke-width="20" />
      </pattern>
    </defs>
  `
}

interface BaseProps {
  role: string
}

/**
 * Houses the shared "base" of the SVG.
 * The base is the background color, and possibly the gradients and shine.
 *
 * @returns string SVG.
 */
const genBase = (props: BaseProps) => {
  let gradientColor
  if (props.role === "STAFF") {
    gradientColor = getRandomElement(GRADIENTS)
  }

  return `
  <g clip-path="url(#corners)">
    <rect fill="white" stroke="rgba(255,255,255,0.2)" x="0px" y="0px" rx="24" ry="24" width="240px" height="400px" />
    ${
      (props.role === "DAILY COMMUTER" ||
        props.role === "WEEKEND COMMUTER" ||
        props.role === "STAFF") &&
      `<rect fill="url(#shine)" stroke="rgba(255,255,255,0.2)" x="0px" y="0px" rx="24" ry="24" width="240px" height="400px" />`
    }
    ${
      props.role === "STAFF" &&
      `<rect fill="url(#${gradientColor})"
        x="0px" y="0px" width="240px" height="400px"
        rx="24" ry="24" fill-opacity="0.5" style="mix-blend-mode: color"
       />`
    }
    <circle cx="-50" cy="-50" r="400" fill="url('#corner-shine-2')" style="mix-blend-mode: overlay" />
  </g>
  `
}

/**
 * Houses the shared SVG for the STATION logo.
 * The font we are using has rounded Ts and we want sharp Ts (hard to explain in a comment.)
 * Anyways, it was easiest to just export the SVG for each letter since this is not dynamic.
 *
 * @returns string SVG.
 */
const genLogo = () => {
  return `
  <g transform="translate(10 18) scale(.95)">
    <path
      d="M22.9999 47.2107H22.2699C14.3899 47.2107 9.72995 43.2107 9.50995 37.0707H0.449951C0.819951 48.4607 8.13992 55.3107 21.6699 55.3107C33.9499 55.4207 41.8599 48.7607 41.7499 39.5507C41.7499 31.1607 36.5799 26.2407 27.1499 24.3507L18.9699 22.7207C14.3499 21.8007 12.1699 19.8007 12.1699 16.1007C12.1699 12.1007 16.0899 8.89072 22.0799 8.89072H22.8199C28.7399 8.89072 33.0599 12.2207 33.4299 17.8907H42.5299C42.5299 7.83072 34.8799 0.690728 22.6699 0.800728C10.7599 0.660728 2.91995 8.28072 3.06995 16.3707C3.21995 24.4607 7.61992 29.6507 16.6099 31.5407L25.6699 33.3807C30.6699 34.3807 32.6699 36.5307 32.6699 40.1207C32.6599 44.0307 29.1099 47.2107 22.9999 47.2107Z"
      fill="black"
    />
    <path
      d="M87.3899 31.9805C83.8368 32.1829 80.4142 33.3896 77.5199 35.4604C74.8899 37.4604 73.5199 40.3005 73.5199 44.1805C73.4099 50.6605 79.0699 55.3904 85.9899 55.3204C88.4105 55.3602 90.8016 54.7856 92.9399 53.6505C94.8486 52.6592 96.4472 51.161 97.5599 49.3204V50.2104C97.6138 51.6733 97.7474 53.1321 97.9599 54.5805H106.18C105.859 51.816 105.722 49.0331 105.77 46.2505V29.9005C105.77 21.5005 99.7699 15.9604 90.0899 15.9604C81.1799 15.9604 74.8099 21.0605 74.2199 28.1205H82.9499C83.2799 25.2005 86.0599 23.1205 89.7899 23.1205H90.4199C94.5599 23.1205 97.2199 25.9005 97.2199 30.1205V31.1205L87.3899 31.9805ZM97.2999 39.8905C97.4499 44.4405 92.5299 48.2905 88.0999 48.1805H87.4999C84.4399 48.1805 82.1799 46.3305 82.1799 43.6705C82.154 42.958 82.3103 42.2507 82.634 41.6154C82.9577 40.9802 83.4382 40.4381 84.0299 40.0405C85.3781 39.1151 86.9488 38.5662 88.5799 38.4505L97.2999 37.6705V39.8905Z"
      fill="black"
    />
    <path d="M147.33 16.7007H138.6V54.5707H147.33V16.7007Z" fill="black" />
    <path d="M147.71 1.53027H138.24V10.9603H147.71V1.53027Z" fill="black" />
    <path
      d="M171.29 55.3105C181.98 55.4505 190.08 46.9504 189.93 35.6304C190.08 24.3204 181.98 15.8104 171.29 15.9604C160.64 15.8104 152.55 24.3204 152.69 35.6304C152.56 46.9804 160.64 55.4505 171.29 55.3105ZM171 23.0905H171.63C177.32 23.0905 181.17 27.7504 181.17 35.6304C181.17 43.5104 177.32 48.1705 171.63 48.1705H171C165.3 48.1705 161.46 43.5104 161.46 35.6304C161.46 27.7504 165.3 23.0905 171 23.0905Z"
      fill="black"
    />
    <path
      d="M204.01 33.4507C204.01 27.4507 208.19 23.0907 213.11 23.0907H213.7C218.14 23.0907 220.4 25.9807 220.4 31.1607V54.5707H229.12V29.8307C229.12 21.5407 224.5 15.9607 215.73 15.9607C213.408 15.8776 211.105 16.4033 209.049 17.4857C206.993 18.5681 205.256 20.1694 204.01 22.1307V16.7007H195.28V54.5707H204.01V33.4507Z"
      fill="black"
    />
    <path
      d="M60.97 4.42041H52.28V16.7004H44.25V23.9104H52.28V54.5704H60.97V54.5604H69.73V46.9604H60.97V46.2104V23.9104H69.73V16.7004H60.97V4.42041Z"
      fill="black"
    />
    <path
      d="M124.78 23.9104H133.54V16.7004H124.78V4.42041H116.09V16.7004H108.06V23.9104H116.09V54.5704H124.78V54.5604H133.54V46.9604H124.78V44.2804V23.9104Z"
      fill="black"
    />
  </g>
  <line x1="0" y1="86" x2="250" y2="86" stroke="black" stroke-width=".5px" />
  `
}

/**
 * Houses the shared "gridline" SVG. This is the grid the icons live on top of.
 *
 * @returns string SVG.
 */
const genGridLines = () => {
  return `
    <line x1="0" y1="0" x2="240" y2="0" stroke="black" stroke-width=".5px" />
    <line x1="0" y1="40" x2="240" y2="40" stroke="black" stroke-width=".5px" />
    <line x1="0" y1="80" x2="240" y2="80" stroke="black" stroke-width=".5px" />
    <line x1="0" y1="120" x2="240" y2="120" stroke="black" stroke-width=".5px" />
    <line x1="0" y1="160" x2="240" y2="160" stroke="black" stroke-width=".5px" />
    <line x1="40" y1="0" x2="40" y2="160" stroke="black" stroke-width=".5px" />
    <line x1="80" y1="0" x2="80" y2="160" stroke="black" stroke-width=".5px" />
    <line x1="120" y1="0" x2="120" y2="160" stroke="black" stroke-width=".5px" />
    <line x1="160" y1="0" x2="160" y2="160" stroke="black" stroke-width=".5px" />
    <line x1="200" y1="0" x2="200" y2="160" stroke="black" stroke-width=".5px" />
  `
}

// iconLetter is the letter inside the tiny circle
// text is the actual large text to the right of the circle.
interface IconWithTextProps extends PositionProps {
  iconLetter: string
  text: string
}

/**
 * Generates a circle and a text node for the top part of the ticket.
 * @TODO: What happens if the text expands outside of the width of the card? (aka too long of a string)
 *
 * @param props see above.
 * @returns string SVG.
 */
const genIconWithText = (props: IconWithTextProps) => {
  let { x, y, iconLetter, text } = props

  // want these to always be uppercased
  iconLetter = iconLetter.toUpperCase()
  text = text.toUpperCase()

  return `
  <g style="transform: translate(${x}px, ${y}px)">
    <circle cx="14px" cy="4px" r="7.5px" stroke="black" stroke-width=".75px" />
    <text y="7px" x="10.75px" fill="black" font-family="'Favorit'" font-weight="500" font-size="9px" >
      ${iconLetter}
    </text>
    <text y="9px" x="26px" fill="black" font-family="'Favorit'" font-weight="500" font-size="15px" >
      ${text}
    </text>
  </g>
  `
}

/**
 * Generates the rotating "web3" circle.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genWeb3Circle = (props: PositionProps) => {
  return `
  <g transform="translate(${props.x} ${props.y})">
    <g transform="translate(3 3)">
      <g>
        <path
          d="M52.277 4.12103L50.3105 3.18133L50.6182 2.54102L55.2454 4.75305L54.9378 5.39336L52.9754 4.45366L50.6722 9.27274L49.9696 8.94011L52.277 4.12103Z"
          fill="black"
        />
        <path
          d="M58.4965 6.82797C59.8227 7.75519 60.1096 9.46411 58.9871 10.9859C57.8646 12.5077 56.185 12.8321 54.8754 11.8799C53.5658 10.9277 53.2623 9.23957 54.3848 7.70113C55.5073 6.16269 57.1869 5.87164 58.4965 6.82797ZM55.3202 11.3477C56.2473 12.0296 57.5029 11.7635 58.351 10.5493C59.1991 9.33522 59.0619 8.08367 58.1182 7.42671L58.0517 7.37682C57.1162 6.69492 55.869 6.96101 55.0209 8.17098C54.1728 9.38094 54.3017 10.6367 55.2537 11.2978L55.3202 11.3477Z"
          fill="black"
        />
        <path
          d="M68.4078 17.1438L62.7328 19.7301L62.0635 18.8985L65.3562 14.7073L60.5127 16.9276L59.8434 16.096L63.6849 11.1855L64.1838 11.8175L60.8121 16.0586L65.7387 13.7925L66.3914 14.6241L63.0197 18.886L67.913 16.5576L68.4078 17.1438Z"
          fill="black"
        />
        <path
          d="M69.2973 18.9277L71.2097 22.8279L70.5737 23.1397L69.0021 19.934L67.3184 20.7656L68.6612 23.5056L68.0293 23.8175L66.6864 21.0774L64.8405 21.9838L66.4536 25.2644L65.8175 25.5763L63.8677 21.5972L69.2973 18.9277Z"
          fill="black"
        />
        <path
          d="M71.9334 24.7529L72.6568 27.2476C72.7334 27.453 72.7666 27.672 72.7542 27.8908C72.7418 28.1096 72.6842 28.3235 72.585 28.5189C72.4857 28.7143 72.347 28.887 72.1776 29.026C72.0082 29.165 71.8118 29.2674 71.6008 29.3266C71.3059 29.429 70.9852 29.429 70.6903 29.3266C70.4087 29.2266 70.1658 29.0404 69.996 28.7944C70.032 29.1248 69.9438 29.4567 69.7487 29.7257C69.5535 29.9947 69.2653 30.1815 68.94 30.2497C68.7215 30.3117 68.4926 30.3282 68.2674 30.2983C68.0423 30.2684 67.8256 30.1926 67.6309 30.0757C67.4361 29.9589 67.2673 29.8033 67.135 29.6187C67.0026 29.4341 66.9095 29.2243 66.8613 29.0023L66.1171 26.4327L71.9334 24.7529ZM67.4974 28.6614C67.5682 28.9517 67.7408 29.2069 67.9838 29.3807C68.1019 29.4556 68.2353 29.5031 68.3742 29.5196C68.513 29.5362 68.6538 29.5214 68.7862 29.4763C69.3974 29.2975 69.6177 28.7653 69.4306 28.1042L68.9442 26.441L67.0151 26.9982L67.4974 28.6614ZM70.1 27.8797C70.1617 28.1485 70.3258 28.3826 70.5573 28.5325C70.6697 28.5989 70.7953 28.64 70.9253 28.653C71.0552 28.6659 71.1865 28.6503 71.3098 28.6073C71.4378 28.5789 71.558 28.5223 71.6615 28.4418C71.765 28.3612 71.8494 28.2587 71.9085 28.1416C72.0218 27.8914 72.0351 27.6072 71.9459 27.3474L71.4678 25.6842L69.6219 26.2206L70.1 27.8797Z"
          fill="black"
        />
        <path
          d="M69.3599 34.0295C69.0714 34.0936 68.8175 34.2639 68.6488 34.5066C68.4801 34.7492 68.4089 35.0465 68.4494 35.3393V35.4183C68.4826 36.096 68.915 36.6282 69.5553 36.595C69.7034 36.5868 69.8481 36.5478 69.9802 36.4804C70.1123 36.413 70.2289 36.3187 70.3225 36.2036C70.416 36.0885 70.4845 35.9551 70.5235 35.812C70.5625 35.6689 70.5711 35.5192 70.5489 35.3726L70.524 34.9027L71.1975 34.8694L71.2224 35.3642C71.2211 35.5067 71.2489 35.6478 71.3042 35.7791C71.3595 35.9104 71.441 36.0289 71.5439 36.1275C71.6467 36.226 71.7686 36.3024 71.9021 36.3521C72.0355 36.4018 72.1777 36.4236 72.32 36.4162C72.4707 36.4084 72.618 36.3687 72.7523 36.2999C72.8865 36.231 73.0047 36.1344 73.0989 36.0166C73.1932 35.8987 73.2614 35.7623 73.2992 35.6161C73.3369 35.47 73.3432 35.3176 73.3178 35.1688V35.0857C73.3132 34.8025 73.2027 34.5313 73.0079 34.3258C72.8132 34.1202 72.5484 33.9952 72.2659 33.9755L72.2285 33.2312C72.7123 33.2539 73.168 33.4649 73.4981 33.8192C73.8283 34.1736 74.0068 34.643 73.9954 35.1272C74.0619 36.1875 73.3968 37.1314 72.4738 37.1563C72.1414 37.1803 71.8102 37.0957 71.5301 36.9151C71.2667 36.7446 71.0632 36.496 70.948 36.2042C70.8828 36.5113 70.7211 36.7896 70.4865 36.9983C70.2288 37.2184 69.9025 37.3419 69.5636 37.3476C68.5741 37.4183 67.8174 36.516 67.7759 35.4016C67.7343 34.2873 68.3039 33.4225 69.3224 33.2603L69.3599 34.0295Z"
          fill="black"
        />
        <path
          d="M70.2496 45.6131L72.4073 44.1744L72.794 44.7524L69.6426 46.8646L67.5306 43.7004L68.1127 43.3179L69.5512 45.4675L70.5365 40.5154L71.2391 40.6526L70.2496 45.6131Z"
          fill="black"
        />
        <path
          d="M69.9045 52.2329L70.8399 50.2662L71.4801 50.5698L69.2767 55.2059L68.6364 54.9023L69.5719 52.9315L64.7451 50.6404L65.0777 49.9377L69.9045 52.2329Z"
          fill="black"
        />
        <path
          d="M67.198 58.4536C66.2751 59.7799 64.5622 60.071 63.0406 58.9484C61.519 57.8257 61.1947 56.1501 62.1467 54.8445C63.0988 53.5389 64.7784 53.227 66.3042 54.3455C67.83 55.464 68.1501 57.1438 67.198 58.4536ZM62.6789 55.2852C62.0012 56.2124 62.2631 57.464 63.4771 58.3122C64.6911 59.1604 65.9425 59.0191 66.5994 58.0794L66.6493 58.0087C67.3269 57.0731 67.065 55.8257 65.851 54.9775C64.637 54.1293 63.3856 54.2665 62.7288 55.2187L62.6789 55.2852Z"
          fill="black"
        />
        <path
          d="M56.9083 68.3821L54.3099 62.7189L55.1414 62.0454L59.3363 65.3301L57.1121 60.4903L57.9435 59.8209L62.8618 63.6503L62.2299 64.1493L57.9851 60.7896L60.2593 65.7085L59.4278 66.3613L55.1664 63.0017L57.5029 67.8873L56.9083 68.3821Z"
          fill="black"
        />
        <path
          d="M55.1205 69.2807L51.2208 71.2017L50.909 70.5655L54.1103 68.9897L53.2788 67.3016L50.539 68.6529L50.2272 68.0167L52.967 66.6695L52.0565 64.8234L48.797 66.4409L48.4894 65.8088L52.4681 63.8505L55.1205 69.2807Z"
          fill="black"
        />
        <path
          d="M49.3002 71.9248L46.8057 72.6525C46.6007 72.7291 46.3819 72.7625 46.1634 72.7504C45.9448 72.7383 45.7311 72.681 45.5358 72.5821C45.3405 72.4833 45.1677 72.345 45.0285 72.1761C44.8893 72.0071 44.7867 71.8111 44.727 71.6005C44.6336 71.3015 44.6409 70.9802 44.7478 70.6858C44.85 70.4053 45.0357 70.1629 45.2799 69.9914C44.9467 70.0327 44.6102 69.947 44.3374 69.7513C44.0647 69.5555 43.8757 69.2642 43.8082 68.9353C43.7462 68.7167 43.7297 68.4878 43.7596 68.2626C43.7895 68.0374 43.8653 67.8207 43.9821 67.6259C44.099 67.4311 44.2545 67.2623 44.4391 67.13C44.6237 66.9976 44.8334 66.9045 45.0554 66.8563L47.6247 66.1078L49.3002 71.9248ZM45.3838 67.4966C45.0925 67.5649 44.8365 67.7381 44.6646 67.9831C44.5893 68.1003 44.5419 68.2332 44.5261 68.3716C44.5102 68.51 44.5263 68.6502 44.5732 68.7814C44.7519 69.3926 45.2799 69.613 45.9451 69.4259L47.6081 68.9353L47.0468 67.006L45.3838 67.4966ZM46.1654 70.0953C45.8982 70.158 45.6657 70.322 45.5169 70.5527C45.4503 70.6659 45.4092 70.7922 45.3963 70.9228C45.3833 71.0535 45.399 71.1854 45.442 71.3095C45.4718 71.437 45.5293 71.5565 45.6105 71.6593C45.6917 71.762 45.7946 71.8456 45.9118 71.904C46.1615 72.0195 46.4464 72.0329 46.7059 71.9414L48.3689 71.4633L47.8284 69.613L46.1654 70.0953Z"
          fill="black"
        />
        <path
          d="M40.0125 69.351C39.9484 69.0616 39.7775 68.8071 39.5339 68.6383C39.2904 68.4695 38.9921 68.3988 38.6987 68.4404H38.6197C37.9421 68.4737 37.4141 68.9061 37.4473 69.5464C37.4549 69.6947 37.4935 69.8398 37.5607 69.9723C37.6279 70.1048 37.7221 70.2216 37.8374 70.3153C37.9526 70.409 38.0862 70.4774 38.2296 70.5162C38.373 70.5549 38.5229 70.5631 38.6696 70.5402L39.1394 70.5152L39.1768 71.1846L38.6779 71.2096C38.5355 71.21 38.3946 71.2393 38.2638 71.2957C38.133 71.3522 38.0151 71.4347 37.9171 71.5381C37.8192 71.6415 37.7432 71.7638 37.6939 71.8974C37.6446 72.0311 37.6229 72.1733 37.6303 72.3156C37.6386 72.466 37.6787 72.6129 37.7478 72.7466C37.8169 72.8804 37.9135 72.9981 38.0313 73.0919C38.149 73.1857 38.2853 73.2536 38.4311 73.2911C38.577 73.3286 38.7291 73.3348 38.8775 73.3094H38.9606C39.2418 73.3021 39.5103 73.191 39.7145 72.9975C39.9186 72.8041 40.044 72.5419 40.0665 72.2616L40.8107 72.2241C40.788 72.7083 40.5772 73.1645 40.223 73.4954C39.8689 73.8263 39.3994 74.0057 38.9149 73.9954C37.8547 74.062 36.911 73.4008 36.8861 72.4736C36.8611 72.1417 36.9443 71.8106 37.123 71.5298C37.2958 71.2684 37.5436 71.0654 37.834 70.9477C37.5262 70.8842 37.2474 70.7221 37.0399 70.4861C36.8157 70.2324 36.6915 69.9058 36.6907 69.5672C36.6158 68.5735 37.5221 67.8209 38.6322 67.7751C39.7422 67.7294 40.6112 68.299 40.7733 69.3177L40.0125 69.351Z"
          fill="black"
        />
        <path
          d="M28.4254 70.2699L29.868 72.4237L29.2902 72.8145L27.1699 69.667L30.3295 67.5464L30.7162 68.1285L28.5668 69.5713L33.5225 70.5484L33.3853 71.2511L28.4254 70.2699Z"
          fill="black"
        />
        <path
          d="M21.8235 69.933L23.7899 70.8643L23.4864 71.5047L18.8633 69.3051L19.1668 68.6648L21.1333 69.6003L23.4241 64.7729L24.1225 65.1056L21.8235 69.933Z"
          fill="black"
        />
        <path
          d="M15.5956 67.2431C14.2652 66.3201 13.9742 64.6112 15.0926 63.0852C16.2109 61.5592 17.8864 61.2308 19.196 62.1788C20.5056 63.1268 20.8174 64.8107 19.699 66.3367C18.5807 67.8627 16.9094 68.1953 15.5956 67.2431ZM18.7553 62.7151C17.8282 62.0374 16.5726 62.2993 15.7287 63.5218C14.8847 64.7442 15.026 65.9874 15.9698 66.6402L16.0363 66.6901C16.9759 67.372 18.2231 67.1059 19.0671 65.8876C19.911 64.6694 19.778 63.4178 18.8218 62.765L18.7553 62.7151Z"
          fill="black"
        />
        <path
          d="M5.65509 56.9479L11.3175 54.3492L11.991 55.1808L8.70667 59.3762L13.546 57.1475L14.2153 57.9791L10.3863 62.8979L9.88738 62.2659L13.2466 58.0207L8.32833 60.295L7.67563 59.4635L11.0348 55.1974L6.14983 57.5383L5.65509 56.9479Z"
          fill="black"
        />
        <path
          d="M4.72807 55.1768L2.80316 51.2766L3.43926 50.9606L5.02325 54.1664L6.68624 53.3348L5.33506 50.5989L5.96698 50.287L7.31815 53.0229L9.16406 52.1124L7.54267 48.8276L8.17459 48.5157L10.1411 52.499L4.72807 55.1768Z"
          fill="black"
        />
        <path
          d="M2.09224 49.3387L1.36469 46.844C1.28809 46.6386 1.25493 46.4196 1.2673 46.2008C1.27966 45.982 1.3373 45.7681 1.43655 45.5727C1.5358 45.3773 1.67452 45.2047 1.84392 45.0656C2.01332 44.9266 2.20971 44.8242 2.4207 44.765C2.71593 44.6649 3.03594 44.6649 3.33118 44.765C3.61278 44.865 3.85571 45.0513 4.02547 45.2972C3.98825 44.9668 4.07532 44.6343 4.26975 44.3645C4.46418 44.0947 4.75207 43.907 5.07731 43.8378C5.29584 43.7758 5.52474 43.7593 5.74991 43.7892C5.97507 43.8191 6.19169 43.8948 6.38647 44.0117C6.58124 44.1286 6.75002 44.2841 6.88237 44.4688C7.01473 44.6534 7.10787 44.8632 7.15604 45.0852L7.90438 47.6548L2.09224 49.3387ZM3.92153 46.2037C3.8588 45.9364 3.69488 45.7039 3.46422 45.555C3.35178 45.4886 3.2262 45.4474 3.09623 45.4345C2.96627 45.4216 2.83505 45.4372 2.71172 45.4802C2.5834 45.5093 2.46314 45.5666 2.35962 45.6478C2.25609 45.7291 2.17188 45.8323 2.11305 45.95C1.99933 46.2002 1.98593 46.4844 2.07562 46.7442L2.55374 48.4074L4.40378 47.8668L3.92153 46.2037ZM6.5241 45.422C6.45334 45.1317 6.28074 44.8764 6.03769 44.7026C5.91962 44.6275 5.78602 44.5803 5.64701 44.5645C5.508 44.5486 5.3672 44.5646 5.23527 44.6112C4.62413 44.7899 4.40379 45.318 4.59504 45.9833L5.08145 47.6464L7.01052 47.0851L6.5241 45.422Z"
          fill="black"
        />
        <path
          d="M4.64488 40.0668C4.93343 40.0018 5.18693 39.8305 5.35488 39.587C5.52283 39.3435 5.59292 39.0457 5.55121 38.7528V38.6738C5.51379 37.9961 5.08142 37.468 4.44117 37.5013C4.29344 37.51 4.14916 37.5495 4.01754 37.6171C3.88591 37.6848 3.76981 37.7791 3.6767 37.8941C3.58358 38.0092 3.51548 38.1424 3.47674 38.2852C3.438 38.4281 3.42947 38.5774 3.4517 38.7238L3.47664 39.1977L2.8073 39.231L2.77819 38.7362C2.77898 38.5938 2.7506 38.4527 2.69481 38.3216C2.63902 38.1906 2.55701 38.0723 2.4538 37.9741C2.35058 37.876 2.22837 37.8 2.09469 37.7509C1.961 37.7017 1.81866 37.6805 1.67645 37.6884C1.52612 37.6968 1.37928 37.7369 1.24551 37.806C1.11174 37.8751 0.994074 37.9717 0.900255 38.0895C0.806436 38.2073 0.738583 38.3436 0.701111 38.4894C0.66364 38.6353 0.657416 38.7874 0.682841 38.9358V39.019C0.689413 39.3018 0.801321 39.5719 0.996655 39.7765C1.19199 39.9811 1.45666 40.1054 1.73883 40.125L1.78039 40.8693C1.2959 40.8487 0.838759 40.6392 0.506916 40.2855C0.175073 39.9319 -0.00504734 39.4623 0.00517386 38.9774C-0.0655029 37.9171 0.595517 36.9691 1.52263 36.9441C1.85454 36.9192 2.18561 37.0024 2.46638 37.1811C2.72883 37.3527 2.93207 37.601 3.04844 37.8922C3.11362 37.585 3.27532 37.3067 3.50991 37.098C3.76413 36.8742 4.09007 36.7488 4.42871 36.7446C5.42235 36.6697 6.17898 37.5761 6.22471 38.6863C6.27044 39.7965 5.70089 40.6655 4.68231 40.8318L4.64488 40.0668Z"
          fill="black"
        />
        <path
          d="M3.72187 28.4995L1.57244 29.9423L1.18164 29.3686L4.3247 27.2438L6.44499 30.3997L5.8671 30.7864L4.42031 28.6409L3.45162 33.593L2.74901 33.4558L3.72187 28.4995Z"
          fill="black"
        />
        <path
          d="M4.0463 21.8634L3.11503 23.8343L2.47479 23.5307L4.66992 18.8863L5.31432 19.1898L4.37889 21.1607L9.21401 23.4517L8.88142 24.1544L4.0463 21.8634Z"
          fill="black"
        />
        <path
          d="M6.72355 15.6427C7.64651 14.3122 9.35522 14.0128 10.881 15.1272C12.4068 16.2415 12.7436 17.9213 11.7957 19.2352C10.8478 20.5491 9.16814 20.8651 7.6382 19.7466C6.10826 18.6281 5.77565 16.9608 6.72355 15.6427ZM11.2594 18.7903C11.937 17.8631 11.6751 16.6115 10.4279 15.7675C9.18063 14.9234 7.95833 15.0689 7.30561 16.0128L7.25572 16.0835C6.57806 17.0232 6.83998 18.2705 8.08721 19.1105C9.33445 19.9504 10.5567 19.8173 11.2136 18.861L11.2594 18.7903Z"
          fill="black"
        />
        <path
          d="M17.0008 5.68463L19.6116 11.3436L18.7801 12.0172L14.5811 8.74488L16.8178 13.5764L15.9863 14.25L11.0639 10.433L11.6917 9.92991L15.9448 13.2812L13.6582 8.36651L14.4896 7.70955L18.7594 11.0609L16.3688 6.17943L17.0008 5.68463Z"
          fill="black"
        />
        <path
          d="M18.7761 4.77837L22.6716 2.84491L22.9876 3.48109L19.7863 5.06943L20.6178 6.75339L23.3534 5.39374L23.6652 6.02575L20.9421 7.39787L21.8526 9.23568L25.1328 7.60993L25.4446 8.24195L21.4743 10.2128L18.7761 4.77837Z"
          fill="black"
        />
        <path
          d="M24.609 2.10841L27.1035 1.37661C27.3086 1.30058 27.5271 1.26774 27.7455 1.28014C27.9639 1.29255 28.1773 1.34992 28.3725 1.44868C28.5676 1.54744 28.7403 1.68545 28.8796 1.85407C29.019 2.02269 29.122 2.21826 29.1822 2.42855C29.2735 2.72641 29.2662 3.04577 29.1614 3.33915C29.0604 3.62137 28.8745 3.86539 28.6293 4.03768C28.9604 3.99936 29.2938 4.08595 29.5645 4.2805C29.8351 4.47505 30.0235 4.76358 30.0927 5.08965C30.1549 5.30678 30.1722 5.5343 30.1436 5.75834C30.115 5.98239 30.041 6.19827 29.9263 6.3928C29.8115 6.58732 29.6584 6.75644 29.4761 6.88983C29.2939 7.02321 29.0863 7.11807 28.8662 7.16863L26.2969 7.92122L24.609 2.10841ZM27.7479 3.93789C28.0147 3.87177 28.2465 3.70682 28.3964 3.47637C28.4631 3.36317 28.504 3.23667 28.5162 3.10587C28.5284 2.97508 28.5117 2.8432 28.4671 2.71962C28.4379 2.59181 28.3807 2.4721 28.2994 2.36925C28.2181 2.26639 28.1149 2.18296 27.9973 2.12503C27.7491 2.0094 27.4654 1.99594 27.2074 2.0876L25.5444 2.56994L26.0849 4.42023L27.7479 3.93789ZM28.5336 6.53661C28.8245 6.46478 29.0798 6.29062 29.2529 6.04598C29.327 5.92829 29.3737 5.79543 29.3896 5.65724C29.4054 5.51904 29.39 5.37907 29.3444 5.24766C29.1656 4.63228 28.6334 4.41605 27.9682 4.60732L26.3053 5.09382L26.8707 7.02725L28.5336 6.53661Z"
          fill="black"
        />
        <path
          d="M33.8842 4.64908C33.9492 4.93766 34.1204 5.19116 34.3639 5.35914C34.6073 5.52711 34.9051 5.59723 35.1979 5.55551H35.2769C35.4281 5.56342 35.5792 5.54046 35.7212 5.48801C35.8632 5.43556 35.993 5.35472 36.1027 5.25044C36.2124 5.14617 36.2997 5.02063 36.3593 4.8815C36.4189 4.74236 36.4495 4.59255 36.4493 4.44118C36.4401 4.29339 36.4002 4.14913 36.332 4.01765C36.2639 3.88617 36.1691 3.77038 36.0537 3.67763C35.9382 3.58489 35.8047 3.51723 35.6617 3.47902C35.5186 3.44082 35.3692 3.43291 35.2229 3.45575L34.7489 3.4807L34.7115 2.80711L35.2104 2.78217C35.3527 2.78182 35.4934 2.75249 35.6239 2.69598C35.7545 2.63947 35.8722 2.55696 35.9699 2.45347C36.0675 2.34998 36.143 2.22768 36.1919 2.09404C36.2407 1.9604 36.2618 1.81821 36.2539 1.67614C36.2456 1.52591 36.2056 1.37914 36.1364 1.24552C36.0673 1.1119 35.9706 0.994473 35.8527 0.900963C35.7348 0.807453 35.5985 0.739999 35.4527 0.703039C35.3069 0.666079 35.1549 0.660454 35.0067 0.686543H34.9194C34.6395 0.697164 34.3735 0.810891 34.1724 1.00585C33.9713 1.20081 33.8494 1.46325 33.8301 1.74268L33.0901 1.78425C33.1096 1.2997 33.3181 0.842057 33.6709 0.509404C34.0237 0.176751 34.4928 -0.00445714 34.9776 0.00463305C36.0377 -0.0618942 36.9856 0.595072 37.0147 1.5223C37.0376 1.85406 36.9546 2.18454 36.7778 2.46616C36.6062 2.72864 36.358 2.93188 36.0668 3.04826C36.374 3.11345 36.6522 3.27519 36.8609 3.50981C37.0858 3.76366 37.2127 4.08955 37.2185 4.4287C37.2933 5.41829 36.387 6.1792 35.2811 6.2291C34.1752 6.27899 33.298 5.70935 33.1317 4.69065L33.8842 4.64908Z"
          fill="black"
        />
        <path
          d="M45.4462 3.70975L43.9994 1.5601L44.5732 1.16925L46.7018 4.31266L43.5504 6.43737L43.1638 5.85941L45.309 4.40829L40.3533 3.44364L40.4905 2.74511L45.4462 3.70975Z"
          fill="black"
        />
        <animateTransform
          attributeName="transform"
          attributeType="XML"
          type="rotate"
          from="0 37 37"
          to="360 37 37"
          dur="20s"
          repeatCount="indefinite"
        />
      </g>
    </g>
  </g>
  `
}

/**
 * Generates the big arrow. This is the big thick arrow that takes up 2x2 in the grid.
 * The padding is set to 8x8 but it would be easy to change.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genBigArrow = (props: PositionProps) => {
  let { x, y } = props

  return `
    <g transform="translate(${x} ${y})">
      <g transform="translate(8, 8)">
        <line x1="8" y1="8" x2="60" y2="60" stroke="black" stroke-width="16px"/>
        <polyline points="8,65 8,8 65,8" stroke="black" stroke-width="16px" />
      </g>
    </g>
  `
}

/**
 * Generates the striped rectangle.
 * It would be easy to extend this to accept width and height.
 * HOWEVER, it would make it a PITA to write the arrangement parser since it depends on
 * all of the functions accepting only PositionProps. eek.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genStripedRect = (props: PositionProps) => {
  let { x, y } = props

  return `<rect fill="url(#stripes)" x="${x}" y="${y}" width="120" height="40" />`
}

/**
 * Generates a 1x1 icon that is a circle with an X in it.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genCircleWithX = (props: PositionProps) => {
  let { x, y } = props

  return `
  <g transform="translate(${x}, ${y})">
    <circle cx="20" cy="20" r="15" stroke="black" stroke-width="1.5px" />
    <g transform="rotate(45 20 20)">
      <line x1="20" x2="20" y1="5" y2="35" stroke="black" stroke-width="5px" />
      <line x1="5" x2="35" y1="20" y2="20" stroke="black" stroke-width="5px" />
    </g>
  </g>
   `
}

/**
 * Generates a 1x1 icon that is a rounded rectangle with an arrow in it.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genRectWithArrow = (props: PositionProps) => {
  let { x, y } = props

  return `
  <g transform="translate(${x}, ${y})">
    <rect width="30" height="30" x="5" y="5" rx="4" ry="4" stroke="black" stroke-width="1.5px" />
    <line x1="10" y1="20" x2="30" y2="20" stroke="black" stroke-width="1.5px" />
      <polyline points="20, 10 30, 20 20, 30" stroke="black" stroke-width="1.5px" />
  </g>
  `
}

/**
 * Generates a 1x1 icon that is a circle with an arrow in it.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genCircleWithArrow = (props: PositionProps) => {
  let { x, y } = props

  return `<g transform="translate(${x}, ${y})">
    <circle cx="20" cy="20" r="15" stroke="black" stroke-width="1.5px" />
    <line x1="27.5" y1="12.5" x2="12.5" y2="27.5" stroke="black" stroke-width="1.5px" />
    <polyline points="12.5, 12.5 27.5, 12.5 27.5, 27.5" stroke="black" stroke-width="1.5px" />
  </g>
  `
}

/**
 * UNUSED
 * Generates a 1x3 rectangle with arrows on the inside.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genTripleArrowRectVertical = (props: PositionProps) => {
  let { x, y } = props

  return `
  <g transform="translate(${x}, ${y})">
    <rect width="30" height="112" x="5" y="5" rx="15" ry="15" stroke="black" stroke-width="1.5" />
    <g transform="translate(30 13) rotate(90)">
      <line x1="0" y1="10" x2="20" y2="10" stroke="black" stroke-width="5px" />
      <polyline points="10, 0 0, 10 10, 20" stroke="black" stroke-width="5px" />
    </g>
    <g transform="translate(30 50) rotate(90)">
      <line x1="0" y1="10" x2="20" y2="10" stroke="black" stroke-width="5px" />
      <polyline points="10, 0 0, 10 10, 20" stroke="black" stroke-width="5px" />
    </g>
    <g transform="translate(30 88) rotate(90)">
      <line x1="0" y1="10" x2="20" y2="10" stroke="black" stroke-width="5px" />
      <polyline points="10, 0 0, 10 10, 20" stroke="black" stroke-width="5px" />
    </g>
  </g>
  `
}

/**
 * Generates a 3x1 rectangle with arrows on the inside.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genTripleArrowRectHorizotal = (props: PositionProps) => {
  let { x, y } = props

  return `
  <g transform="translate(${x}, ${y})">
    <g transform="rotate(90, 0, 120) translate(-120, 0)">
      <rect width="30" height="112" x="5" y="5" rx="15" ry="15" stroke="black" stroke-width="1.5" />
      <g transform="translate(30 13) rotate(90)">
        <line x1="0" y1="10" x2="20" y2="10" stroke="black" stroke-width="5px" />
        <polyline points="10, 0 0, 10 10, 20" stroke="black" stroke-width="5px" />
      </g>
      <g transform="translate(30 50) rotate(90)">
        <line x1="0" y1="10" x2="20" y2="10" stroke="black" stroke-width="5px" />
        <polyline points="10, 0 0, 10 10, 20" stroke="black" stroke-width="5px" />
      </g>
      <g transform="translate(30 88) rotate(90)">
        <line x1="0" y1="10" x2="20" y2="10" stroke="black" stroke-width="5px" />
        <polyline points="10, 0 0, 10 10, 20" stroke="black" stroke-width="5px" />
      </g>
    </g>
  </g>
  `
}

/**
 * Generates a 2x1 rectangle with the text "admit one" on the inside.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genAdmitOne = (props: PositionProps) => {
  let { x, y } = props

  return `
  <g transform="translate(${x}, ${y})">
    <rect x="5" y="5" height="30" width="70" rx="5" ry="5" stroke="black" stroke-width="1.5px" />
    <text x="20" y="18" fill="black" font-family="'Favorit'" font-weight="500" font-size="12px">
      ADMIT
    </text>
    <text  x="26" y="30" fill="black" font-family="'Favorit'" font-weight="500" font-size="12px">
      ONE
    </text>
  </g>
  `
}

/**
 * Generates a 1x1 icon of 4 arrows pointing N-E-S-W
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genFourArrows = (props: PositionProps) => {
  let { x, y } = props

  return `
  <g transform="translate(${x},${y})">
  <line x1="20" y1="5" x2="20" y2="35" stroke="black" stroke-width="2px" />
    <line x1="5" y1="20" x2="35" y2="20" stroke="black" stroke-width="2px" />
    <polyline points="15, 10 20, 5 25, 10" stroke="black" stroke-width="2px" />
    <polyline points="25, 30 20, 35 15, 30" stroke="black" stroke-width="2px" />
    <polyline points="30, 15 35, 20 30, 25" stroke="black" stroke-width="2px" />
    <polyline points="10, 15 5, 20 10, 25" stroke="black" stroke-width="2px" />
  </g>
  `
}

/**
 * Generates a 1x1 'globe' icon.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genGlobe = (props: PositionProps) => {
  let { x, y } = props
  return `
  <g transform="translate(${x},${y})">
    <circle cx="20" cy="20" r="15" stroke="black" stroke-width="2px" />
    <ellipse cx="20" cy="20" rx="7.5" ry="15" stroke="black" stroke-width="2px" />
    <line x1="6" y1="13" x2="34" y2="13" stroke="black" stroke-width="2px" />
    <line x1="6" y1="20" x2="34" y2="20" stroke="black" stroke-width="2px" />
    <line x1="6" y1="27" x2="34" y2="27" stroke="black" stroke-width="2px" />
  </g>
  `
}

/**
 * Generates a 1x1 icon that is a filled black rectangle with an arrow subtracted out.
 *
 * @param props - position props.
 * @returns string SVG.
 */
const genInvertedArrow = (props: PositionProps) => {
  let { x, y } = props

  return `
  <g transform="translate(${x}, ${y})">
    <rect  x="5" y="5" height="30" width="30" rx="5" ry="5" fill="black" mask="url(#arrow)" />
  </g>
  `
}

// the station name marquees itself across the bottom of the ticket.
interface FooterProps {
  stationName: string
}

/**
 * Generates the footer.
 * @TODO: in the date, the month is a number, but the mock has it as a string (like 10 -> OCT)
 *
 * @param props - see above.
 * @returns string SVG.
 */
const genFooter = (props: FooterProps) => {
  const date = new Date()
  const hour = date.getHours()
  const minutes = date.getMinutes()
  const [month, day, year] = date.toLocaleDateString().split("/")

  const name = props.stationName.toUpperCase()

  return `
  <text y="190" x="0" fill="black" font-family="'Favorit'" font-weight="500" font-size="15px" >
    ${name} ${name} ${name} ${name}
    <animate
      attributeName="x"
      values="270;-270;"
      dur="10s"
      repeatCount="indefinite"
    />
  </text>
  <text y="210px" x="68px" fill="black" font-family="'Favorit'" font-weight="500" font-size="8px">
    MINTED ${hour}:${minutes} ON ${day}-${month}-${year}
  </text>
  `
}

/**
 * Arrangements
 * To make it easier to allow for custom sets of icons, you can create 2D arrows that match the grid set by the ticket.
 * Since we are working with a 6x4 grid, we have a 2D array of 4 arrays of 6 functions slots each.
 * Each slot represents a coordinate in the x,y plane... arr[0][0] -> point 0,0 in the x,y plane.
 * In each spot, you either put a generator function (see above) or null, if the previous slot is larger than 1x1.
 * Then, you can call the parseArrangement function that runs a reducer to call each function and merge all of the
 * returned SVGs. You are left with a mosiac of icons to overlay over the grid.
 * I thought this was a nice way to do it because it allows us to easily change the grid pattern moving forward.
 * Just create more arangements.
 */

// unused, but maybe we will want a default.
const DEFAULT_ARRANGEMENT = [
  [genGlobe, genWeb3Circle, null, genTripleArrowRectHorizotal, null, null],
  [genFourArrows, null, null, genCircleWithArrow, genCircleWithArrow, genCircleWithArrow],
  [genStripedRect, null, null, genCircleWithX, genBigArrow, null],
  [genCircleWithX, genInvertedArrow, genAdmitOne, null, null, null],
]

const VISITOR_ARRANGEMENT = [
  [genGlobe, genWeb3Circle, null, genTripleArrowRectHorizotal, null, null],
  [genFourArrows, null, null, genCircleWithArrow, genCircleWithArrow, genCircleWithArrow],
  [genStripedRect, null, null, genCircleWithX, genBigArrow, null],
  [genCircleWithX, genInvertedArrow, genAdmitOne, null, null, null],
]

const CONTRIBUTOR_ARRANGEMENT = [
  [genGlobe, genWeb3Circle, null, genTripleArrowRectHorizotal, null, null],
  [genFourArrows, null, null, genCircleWithArrow, genCircleWithArrow, genCircleWithArrow],
  [genStripedRect, null, null, genCircleWithX, genBigArrow, null],
  [genCircleWithX, genInvertedArrow, genAdmitOne, null, null, null],
]

const CORE_ARRANGEMENT_ONE = [
  [genBigArrow, null, genGlobe, genFourArrows, genWeb3Circle],
  [null, null, genRectWithArrow, genRectWithArrow, null, null],
  [genCircleWithX, genAdmitOne, null, genCircleWithArrow, genCircleWithArrow, genCircleWithArrow],
  [genTripleArrowRectHorizotal, null, null, genStripedRect, null, null],
]

const CORE_ARRANGEMENT_TWO = [
  [genWeb3Circle, null, genGlobe, genCircleWithArrow, genCircleWithArrow, genCircleWithArrow],
  [null, null, genFourArrows, genInvertedArrow, genBigArrow, null],
  [genAdmitOne, null, genCircleWithX, genCircleWithX, null, null],
  [genStripedRect, null, null, genTripleArrowRectHorizotal, null, null],
]

const CORE_ARRANGEMENT_THREE = [
  [genWeb3Circle, null, genGlobe, genFourArrows, genBigArrow, null],
  [null, null, genRectWithArrow, genRectWithArrow, null, null],
  [genCircleWithX, genTripleArrowRectHorizotal, null, null, genAdmitOne],
  [genStripedRect, null, null, genCircleWithArrow, genCircleWithArrow, genCircleWithArrow],
]

/**
 * Stitches together the pieces of the arrangement into one final SVG string.
 *
 * @param arrangement - the arrangement to stich together. Must be a 2D array of function || null.
 * @returns string SVG.
 */
const parseArrangement = (arrangement: (((props: PositionProps) => string) | null)[][]) => {
  return arrangement.reduce((acc, row, y_pos) => {
    return (
      acc +
      row.reduce((acc, cur, x_pos) => {
        if (cur === null) {
          return acc
        }
        return acc + cur({ x: x_pos * 40, y: y_pos * 40 })
      }, "")
    )
  }, "")
}
